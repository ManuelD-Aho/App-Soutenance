version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/prod/Dockerfile
    container_name: app-soutenance-prod
    restart: always
    volumes:
      - app-uploads:/var/www/html/public/uploads
      - ./docker/prod/php.ini:/usr/local/etc/php/conf.d/custom.ini
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - db
    networks:
      - app-network
    environment:
      - APP_ENV=production
      - DB_HOST=db
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G

  db:
    image: mysql:8.0
    container_name: app-soutenance-db-prod
    restart: always
    environment:
      MYSQL_DATABASE: app_soutenance
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - db-data-prod:/var/lib/mysql
      - ./soutenance.sql:/docker-entrypoint-initdb.d/soutenance.sql
    ports:
      - "3306:3306"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  redis:
    image: redis:alpine
    container_name: app-soutenance-redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

networks:
  app-network:
    driver: bridge

volumes:
  app-uploads:
    driver: local
  db-data-prod:
    driver: local
  redis-data:
    driver: local